-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2013.4
-- Copyright (C) 2013 Xilinx Inc. All rights reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity xillybus_wrapper is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    in_r_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    in_r_empty_n : IN STD_LOGIC;
    in_r_read : OUT STD_LOGIC;
    out_r_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_r_full_n : IN STD_LOGIC;
    out_r_write : OUT STD_LOGIC;
    debug_ready : IN STD_LOGIC_VECTOR (7 downto 0);
    debug_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    debug_out_ap_vld : OUT STD_LOGIC );
end;


architecture behav of xillybus_wrapper is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "xillybus_wrapper,hls_ip_2013_4,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7vx485tffg1761-2,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.671250,HLS_SYN_LAT=156,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=0,HLS_SYN_LUT=0}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_st3_fsm_2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_st4_fsm_3 : STD_LOGIC_VECTOR (3 downto 0) := "0011";
    constant ap_ST_st5_fsm_4 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_st6_fsm_5 : STD_LOGIC_VECTOR (3 downto 0) := "0101";
    constant ap_ST_st7_fsm_6 : STD_LOGIC_VECTOR (3 downto 0) := "0110";
    constant ap_ST_st8_fsm_7 : STD_LOGIC_VECTOR (3 downto 0) := "0111";
    constant ap_ST_st9_fsm_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_ST_st10_fsm_9 : STD_LOGIC_VECTOR (3 downto 0) := "1001";
    constant ap_ST_st11_fsm_10 : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_ST_st12_fsm_11 : STD_LOGIC_VECTOR (3 downto 0) := "1011";
    constant ap_ST_st13_fsm_12 : STD_LOGIC_VECTOR (3 downto 0) := "1100";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv4_D : STD_LOGIC_VECTOR (3 downto 0) := "1101";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";

    signal p_str3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_str3_ce0 : STD_LOGIC;
    signal p_str3_q0 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_str4_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_str4_ce0 : STD_LOGIC;
    signal p_str4_q0 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_str5_address0 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_str5_ce0 : STD_LOGIC;
    signal p_str5_q0 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    signal tmp_i_fu_197_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_reg_290 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_rec_i_fu_203_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_rec_i_reg_294 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_str3_load_cast_fu_209_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_str3_load_cast_reg_299 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_bdd_68 : BOOLEAN;
    signal x1_reg_304 : STD_LOGIC_VECTOR (31 downto 0);
    signal x2_fu_222_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal x2_reg_313 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_i3_fu_231_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i3_reg_323 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_rec_i8_fu_237_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_rec_i8_reg_327 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_str4_load_cast_fu_243_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_str4_load_cast_reg_332 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_str5_load_cast_fu_261_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_str5_load_cast_reg_345 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_0_rec_i9_reg_149 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_bdd_100 : BOOLEAN;
    signal grp_sinf_or_cosf_fu_164_ap_start : STD_LOGIC;
    signal grp_sinf_or_cosf_fu_164_ap_done : STD_LOGIC;
    signal grp_sinf_or_cosf_fu_164_ap_idle : STD_LOGIC;
    signal grp_sinf_or_cosf_fu_164_ap_ready : STD_LOGIC;
    signal grp_sinf_or_cosf_fu_164_t_in : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_sinf_or_cosf_fu_164_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_xilly_decprint_fu_177_ap_start : STD_LOGIC;
    signal grp_xilly_decprint_fu_177_ap_done : STD_LOGIC;
    signal grp_xilly_decprint_fu_177_ap_idle : STD_LOGIC;
    signal grp_xilly_decprint_fu_177_ap_ready : STD_LOGIC;
    signal grp_xilly_decprint_fu_177_val_r : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_xilly_decprint_fu_177_debug_ready : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_xilly_decprint_fu_177_debug_out : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_xilly_decprint_fu_177_debug_out_ap_vld : STD_LOGIC;
    signal p_0_rec_i_reg_127 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_10_fu_213_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_0_rec_i2_reg_138 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_11_fu_247_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_13_fu_271_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_sinf_or_cosf_fu_164_ap_start_ap_start_reg : STD_LOGIC := '0';
    signal grp_xilly_decprint_fu_177_ap_start_ap_start_reg : STD_LOGIC := '0';
    signal p_0_rec_i_cast_fu_192_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_0_rec_i2_cast_fu_226_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_0_rec_i9_cast_fu_256_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal y1_fu_265_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal y2_fu_280_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);

    component sinf_or_cosf IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        t_in : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component xilly_decprint IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        val_r : IN STD_LOGIC_VECTOR (31 downto 0);
        debug_ready : IN STD_LOGIC_VECTOR (7 downto 0);
        debug_out : OUT STD_LOGIC_VECTOR (7 downto 0);
        debug_out_ap_vld : OUT STD_LOGIC );
    end component;


    component xillybus_wrapper_p_str3 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (6 downto 0) );
    end component;


    component xillybus_wrapper_p_str4 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (1 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (6 downto 0) );
    end component;


    component xillybus_wrapper_p_str5 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (0 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (3 downto 0) );
    end component;



begin
    p_str3_U : component xillybus_wrapper_p_str3
    generic map (
        DataWidth => 7,
        AddressRange => 14,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => p_str3_address0,
        ce0 => p_str3_ce0,
        q0 => p_str3_q0);

    p_str4_U : component xillybus_wrapper_p_str4
    generic map (
        DataWidth => 7,
        AddressRange => 4,
        AddressWidth => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => p_str4_address0,
        ce0 => p_str4_ce0,
        q0 => p_str4_q0);

    p_str5_U : component xillybus_wrapper_p_str5
    generic map (
        DataWidth => 4,
        AddressRange => 2,
        AddressWidth => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => p_str5_address0,
        ce0 => p_str5_ce0,
        q0 => p_str5_q0);

    grp_sinf_or_cosf_fu_164 : component sinf_or_cosf
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_sinf_or_cosf_fu_164_ap_start,
        ap_done => grp_sinf_or_cosf_fu_164_ap_done,
        ap_idle => grp_sinf_or_cosf_fu_164_ap_idle,
        ap_ready => grp_sinf_or_cosf_fu_164_ap_ready,
        t_in => grp_sinf_or_cosf_fu_164_t_in,
        ap_return => grp_sinf_or_cosf_fu_164_ap_return);

    grp_xilly_decprint_fu_177 : component xilly_decprint
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_xilly_decprint_fu_177_ap_start,
        ap_done => grp_xilly_decprint_fu_177_ap_done,
        ap_idle => grp_xilly_decprint_fu_177_ap_idle,
        ap_ready => grp_xilly_decprint_fu_177_ap_ready,
        val_r => grp_xilly_decprint_fu_177_val_r,
        debug_ready => grp_xilly_decprint_fu_177_debug_ready,
        debug_out => grp_xilly_decprint_fu_177_debug_out,
        debug_out_ap_vld => grp_xilly_decprint_fu_177_debug_out_ap_vld);





    -- the current state (ap_CS_fsm) of the state machine. --
    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    -- grp_sinf_or_cosf_fu_164_ap_start_ap_start_reg assign process. --
    grp_sinf_or_cosf_fu_164_ap_start_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_sinf_or_cosf_fu_164_ap_start_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_ST_st11_fsm_10 = ap_CS_fsm) and not((ap_const_lv1_0 = p_0_rec_i9_reg_149)) and not(ap_sig_bdd_100))) then 
                    grp_sinf_or_cosf_fu_164_ap_start_ap_start_reg <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_sinf_or_cosf_fu_164_ap_ready)) then 
                    grp_sinf_or_cosf_fu_164_ap_start_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- grp_xilly_decprint_fu_177_ap_start_ap_start_reg assign process. --
    grp_xilly_decprint_fu_177_ap_start_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_xilly_decprint_fu_177_ap_start_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_ST_st7_fsm_6 = ap_CS_fsm) and not((ap_const_lv1_0 = tmp_i3_reg_323)))) then 
                    grp_xilly_decprint_fu_177_ap_start_ap_start_reg <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_xilly_decprint_fu_177_ap_ready)) then 
                    grp_xilly_decprint_fu_177_ap_start_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- p_0_rec_i2_reg_138 assign process. --
    p_0_rec_i2_reg_138_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_st8_fsm_7 = ap_CS_fsm) and not((ap_const_lv1_0 = tmp_11_fu_247_p1)))) then 
                p_0_rec_i2_reg_138 <= p_rec_i8_reg_327;
            elsif (((ap_ST_st5_fsm_4 = ap_CS_fsm) and not((in_r_empty_n = ap_const_logic_0)))) then 
                p_0_rec_i2_reg_138 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    -- p_0_rec_i9_reg_149 assign process. --
    p_0_rec_i9_reg_149_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_st12_fsm_11 = ap_CS_fsm) and not((ap_const_lv1_0 = tmp_13_fu_271_p1)))) then 
                p_0_rec_i9_reg_149 <= ap_const_lv1_1;
            elsif (((ap_ST_st9_fsm_8 = ap_CS_fsm) and not((ap_const_logic_0 = grp_xilly_decprint_fu_177_ap_done)))) then 
                p_0_rec_i9_reg_149 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    -- p_0_rec_i_reg_127 assign process. --
    p_0_rec_i_reg_127_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_st4_fsm_3 = ap_CS_fsm) and not((ap_const_lv1_0 = tmp_10_fu_213_p1)))) then 
                p_0_rec_i_reg_127 <= p_rec_i_reg_294;
            elsif ((ap_ST_st1_fsm_0 = ap_CS_fsm)) then 
                p_0_rec_i_reg_127 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st6_fsm_5 = ap_CS_fsm)) then
                p_rec_i8_reg_327 <= p_rec_i8_fu_237_p2;
                tmp_i3_reg_323 <= tmp_i3_fu_231_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st2_fsm_1 = ap_CS_fsm)) then
                p_rec_i_reg_294 <= p_rec_i_fu_203_p2;
                tmp_i_reg_290 <= tmp_i_fu_197_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_st3_fsm_2 = ap_CS_fsm) and not(ap_sig_bdd_68))) then
                p_str3_load_cast_reg_299(0) <= p_str3_load_cast_fu_209_p1(0);
    p_str3_load_cast_reg_299(1) <= p_str3_load_cast_fu_209_p1(1);
    p_str3_load_cast_reg_299(2) <= p_str3_load_cast_fu_209_p1(2);
    p_str3_load_cast_reg_299(3) <= p_str3_load_cast_fu_209_p1(3);
    p_str3_load_cast_reg_299(4) <= p_str3_load_cast_fu_209_p1(4);
    p_str3_load_cast_reg_299(5) <= p_str3_load_cast_fu_209_p1(5);
    p_str3_load_cast_reg_299(6) <= p_str3_load_cast_fu_209_p1(6);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st7_fsm_6 = ap_CS_fsm)) then
                p_str4_load_cast_reg_332(0) <= p_str4_load_cast_fu_243_p1(0);
    p_str4_load_cast_reg_332(1) <= p_str4_load_cast_fu_243_p1(1);
    p_str4_load_cast_reg_332(2) <= p_str4_load_cast_fu_243_p1(2);
    p_str4_load_cast_reg_332(3) <= p_str4_load_cast_fu_243_p1(3);
    p_str4_load_cast_reg_332(4) <= p_str4_load_cast_fu_243_p1(4);
    p_str4_load_cast_reg_332(5) <= p_str4_load_cast_fu_243_p1(5);
    p_str4_load_cast_reg_332(6) <= p_str4_load_cast_fu_243_p1(6);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_st11_fsm_10 = ap_CS_fsm) and not(ap_sig_bdd_100))) then
                p_str5_load_cast_reg_345(0) <= p_str5_load_cast_fu_261_p1(0);
    p_str5_load_cast_reg_345(1) <= p_str5_load_cast_fu_261_p1(1);
    p_str5_load_cast_reg_345(2) <= p_str5_load_cast_fu_261_p1(2);
    p_str5_load_cast_reg_345(3) <= p_str5_load_cast_fu_261_p1(3);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_st3_fsm_2 = ap_CS_fsm) and not((tmp_i_reg_290 = ap_const_lv1_0)) and not(ap_sig_bdd_68))) then
                x1_reg_304 <= in_r_dout;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_st5_fsm_4 = ap_CS_fsm) and not((in_r_empty_n = ap_const_logic_0)))) then
                x2_reg_313 <= x2_fu_222_p1;
            end if;
        end if;
    end process;
    p_str3_load_cast_reg_299(7) <= '0';
    p_str4_load_cast_reg_332(7) <= '0';
    p_str5_load_cast_reg_345(7 downto 4) <= "0000";

    -- the next state (ap_NS_fsm) of the state machine. --
    ap_NS_fsm_assign_proc : process (in_r_empty_n , out_r_full_n , ap_CS_fsm , tmp_i_reg_290 , ap_sig_bdd_68 , tmp_i3_reg_323 , p_0_rec_i9_reg_149 , ap_sig_bdd_100 , grp_sinf_or_cosf_fu_164_ap_done , grp_xilly_decprint_fu_177_ap_done , tmp_10_fu_213_p1 , tmp_11_fu_247_p1 , tmp_13_fu_271_p1)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                ap_NS_fsm <= ap_ST_st2_fsm_1;
            when ap_ST_st2_fsm_1 => 
                ap_NS_fsm <= ap_ST_st3_fsm_2;
            when ap_ST_st3_fsm_2 => 
                if ((not((tmp_i_reg_290 = ap_const_lv1_0)) and not(ap_sig_bdd_68))) then
                    ap_NS_fsm <= ap_ST_st5_fsm_4;
                elsif (((tmp_i_reg_290 = ap_const_lv1_0) and not(ap_sig_bdd_68))) then
                    ap_NS_fsm <= ap_ST_st4_fsm_3;
                else
                    ap_NS_fsm <= ap_ST_st3_fsm_2;
                end if;
            when ap_ST_st4_fsm_3 => 
                if (not((ap_const_lv1_0 = tmp_10_fu_213_p1))) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st4_fsm_3;
                end if;
            when ap_ST_st5_fsm_4 => 
                if (not((in_r_empty_n = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_st6_fsm_5;
                else
                    ap_NS_fsm <= ap_ST_st5_fsm_4;
                end if;
            when ap_ST_st6_fsm_5 => 
                ap_NS_fsm <= ap_ST_st7_fsm_6;
            when ap_ST_st7_fsm_6 => 
                if (not((ap_const_lv1_0 = tmp_i3_reg_323))) then
                    ap_NS_fsm <= ap_ST_st9_fsm_8;
                else
                    ap_NS_fsm <= ap_ST_st8_fsm_7;
                end if;
            when ap_ST_st8_fsm_7 => 
                if (not((ap_const_lv1_0 = tmp_11_fu_247_p1))) then
                    ap_NS_fsm <= ap_ST_st6_fsm_5;
                else
                    ap_NS_fsm <= ap_ST_st8_fsm_7;
                end if;
            when ap_ST_st9_fsm_8 => 
                if (not((ap_const_logic_0 = grp_xilly_decprint_fu_177_ap_done))) then
                    ap_NS_fsm <= ap_ST_st10_fsm_9;
                else
                    ap_NS_fsm <= ap_ST_st9_fsm_8;
                end if;
            when ap_ST_st10_fsm_9 => 
                ap_NS_fsm <= ap_ST_st11_fsm_10;
            when ap_ST_st11_fsm_10 => 
                if ((not((ap_const_lv1_0 = p_0_rec_i9_reg_149)) and not(ap_sig_bdd_100))) then
                    ap_NS_fsm <= ap_ST_st13_fsm_12;
                elsif (((ap_const_lv1_0 = p_0_rec_i9_reg_149) and not(ap_sig_bdd_100))) then
                    ap_NS_fsm <= ap_ST_st12_fsm_11;
                else
                    ap_NS_fsm <= ap_ST_st11_fsm_10;
                end if;
            when ap_ST_st12_fsm_11 => 
                if (not((ap_const_lv1_0 = tmp_13_fu_271_p1))) then
                    ap_NS_fsm <= ap_ST_st10_fsm_9;
                else
                    ap_NS_fsm <= ap_ST_st12_fsm_11;
                end if;
            when ap_ST_st13_fsm_12 => 
                if (not(((out_r_full_n = ap_const_logic_0) or (ap_const_logic_0 = grp_sinf_or_cosf_fu_164_ap_done)))) then
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                else
                    ap_NS_fsm <= ap_ST_st13_fsm_12;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;

    -- ap_sig_bdd_100 assign process. --
    ap_sig_bdd_100_assign_proc : process(out_r_full_n, p_0_rec_i9_reg_149)
    begin
                ap_sig_bdd_100 <= ((out_r_full_n = ap_const_logic_0) and not((ap_const_lv1_0 = p_0_rec_i9_reg_149)));
    end process;


    -- ap_sig_bdd_68 assign process. --
    ap_sig_bdd_68_assign_proc : process(in_r_empty_n, tmp_i_reg_290)
    begin
                ap_sig_bdd_68 <= ((in_r_empty_n = ap_const_logic_0) and not((tmp_i_reg_290 = ap_const_lv1_0)));
    end process;


    -- debug_out assign process. --
    debug_out_assign_proc : process(ap_CS_fsm, p_str3_load_cast_reg_299, tmp_i3_reg_323, p_str4_load_cast_reg_332, p_str5_load_cast_reg_345, grp_xilly_decprint_fu_177_debug_out, grp_xilly_decprint_fu_177_debug_out_ap_vld, tmp_10_fu_213_p1, tmp_11_fu_247_p1, tmp_13_fu_271_p1)
    begin
        if (((ap_ST_st12_fsm_11 = ap_CS_fsm) and not((ap_const_lv1_0 = tmp_13_fu_271_p1)))) then 
            debug_out <= p_str5_load_cast_reg_345;
        elsif (((ap_ST_st8_fsm_7 = ap_CS_fsm) and not((ap_const_lv1_0 = tmp_11_fu_247_p1)))) then 
            debug_out <= p_str4_load_cast_reg_332;
        elsif (((ap_ST_st4_fsm_3 = ap_CS_fsm) and not((ap_const_lv1_0 = tmp_10_fu_213_p1)))) then 
            debug_out <= p_str3_load_cast_reg_299;
        elsif ((((ap_ST_st7_fsm_6 = ap_CS_fsm) and not((ap_const_lv1_0 = tmp_i3_reg_323)) and (ap_const_logic_1 = grp_xilly_decprint_fu_177_debug_out_ap_vld)) or ((ap_ST_st9_fsm_8 = ap_CS_fsm) and (ap_const_logic_1 = grp_xilly_decprint_fu_177_debug_out_ap_vld)))) then 
            debug_out <= grp_xilly_decprint_fu_177_debug_out;
        else 
            debug_out <= "XXXXXXXX";
        end if; 
    end process;


    -- debug_out_ap_vld assign process. --
    debug_out_ap_vld_assign_proc : process(ap_CS_fsm, grp_xilly_decprint_fu_177_debug_out_ap_vld, tmp_10_fu_213_p1, tmp_11_fu_247_p1, tmp_13_fu_271_p1)
    begin
        if ((((ap_ST_st4_fsm_3 = ap_CS_fsm) and not((ap_const_lv1_0 = tmp_10_fu_213_p1))) or ((ap_ST_st8_fsm_7 = ap_CS_fsm) and not((ap_const_lv1_0 = tmp_11_fu_247_p1))) or ((ap_ST_st12_fsm_11 = ap_CS_fsm) and not((ap_const_lv1_0 = tmp_13_fu_271_p1))))) then 
            debug_out_ap_vld <= ap_const_logic_1;
        elsif (((ap_ST_st7_fsm_6 = ap_CS_fsm) or (ap_ST_st9_fsm_8 = ap_CS_fsm))) then 
            debug_out_ap_vld <= grp_xilly_decprint_fu_177_debug_out_ap_vld;
        else 
            debug_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    grp_sinf_or_cosf_fu_164_ap_start <= grp_sinf_or_cosf_fu_164_ap_start_ap_start_reg;
    grp_sinf_or_cosf_fu_164_t_in <= x2_reg_313;
    grp_xilly_decprint_fu_177_ap_start <= grp_xilly_decprint_fu_177_ap_start_ap_start_reg;
    grp_xilly_decprint_fu_177_debug_ready <= debug_ready;
    grp_xilly_decprint_fu_177_val_r <= x1_reg_304;

    -- in_r_read assign process. --
    in_r_read_assign_proc : process(in_r_empty_n, ap_CS_fsm, tmp_i_reg_290, ap_sig_bdd_68)
    begin
        if ((((ap_ST_st3_fsm_2 = ap_CS_fsm) and not((tmp_i_reg_290 = ap_const_lv1_0)) and not(ap_sig_bdd_68)) or ((ap_ST_st5_fsm_4 = ap_CS_fsm) and not((in_r_empty_n = ap_const_logic_0))))) then 
            in_r_read <= ap_const_logic_1;
        else 
            in_r_read <= ap_const_logic_0;
        end if; 
    end process;


    -- out_r_din assign process. --
    out_r_din_assign_proc : process(out_r_full_n, ap_CS_fsm, p_0_rec_i9_reg_149, ap_sig_bdd_100, grp_sinf_or_cosf_fu_164_ap_done, y1_fu_265_p2, y2_fu_280_p1)
    begin
        if (((ap_ST_st13_fsm_12 = ap_CS_fsm) and not(((out_r_full_n = ap_const_logic_0) or (ap_const_logic_0 = grp_sinf_or_cosf_fu_164_ap_done))))) then 
            out_r_din <= y2_fu_280_p1;
        elsif (((ap_ST_st11_fsm_10 = ap_CS_fsm) and not((ap_const_lv1_0 = p_0_rec_i9_reg_149)) and not(ap_sig_bdd_100))) then 
            out_r_din <= y1_fu_265_p2;
        else 
            out_r_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- out_r_write assign process. --
    out_r_write_assign_proc : process(out_r_full_n, ap_CS_fsm, p_0_rec_i9_reg_149, ap_sig_bdd_100, grp_sinf_or_cosf_fu_164_ap_done)
    begin
        if ((((ap_ST_st11_fsm_10 = ap_CS_fsm) and not((ap_const_lv1_0 = p_0_rec_i9_reg_149)) and not(ap_sig_bdd_100)) or ((ap_ST_st13_fsm_12 = ap_CS_fsm) and not(((out_r_full_n = ap_const_logic_0) or (ap_const_logic_0 = grp_sinf_or_cosf_fu_164_ap_done)))))) then 
            out_r_write <= ap_const_logic_1;
        else 
            out_r_write <= ap_const_logic_0;
        end if; 
    end process;

    p_0_rec_i2_cast_fu_226_p1 <= std_logic_vector(resize(unsigned(p_0_rec_i2_reg_138),64));
    p_0_rec_i9_cast_fu_256_p1 <= std_logic_vector(resize(unsigned(p_0_rec_i9_reg_149),64));
    p_0_rec_i_cast_fu_192_p1 <= std_logic_vector(resize(unsigned(p_0_rec_i_reg_127),64));
    p_rec_i8_fu_237_p2 <= std_logic_vector(unsigned(p_0_rec_i2_reg_138) + unsigned(ap_const_lv2_1));
    p_rec_i_fu_203_p2 <= std_logic_vector(unsigned(p_0_rec_i_reg_127) + unsigned(ap_const_lv4_1));
    p_str3_address0 <= p_0_rec_i_cast_fu_192_p1(4 - 1 downto 0);

    -- p_str3_ce0 assign process. --
    p_str3_ce0_assign_proc : process(ap_CS_fsm)
    begin
        if ((ap_ST_st2_fsm_1 = ap_CS_fsm)) then 
            p_str3_ce0 <= ap_const_logic_1;
        else 
            p_str3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_str3_load_cast_fu_209_p1 <= std_logic_vector(resize(unsigned(p_str3_q0),8));
    p_str4_address0 <= p_0_rec_i2_cast_fu_226_p1(2 - 1 downto 0);

    -- p_str4_ce0 assign process. --
    p_str4_ce0_assign_proc : process(ap_CS_fsm)
    begin
        if ((ap_ST_st6_fsm_5 = ap_CS_fsm)) then 
            p_str4_ce0 <= ap_const_logic_1;
        else 
            p_str4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_str4_load_cast_fu_243_p1 <= std_logic_vector(resize(unsigned(p_str4_q0),8));
    p_str5_address0 <= p_0_rec_i9_cast_fu_256_p1(1 - 1 downto 0);

    -- p_str5_ce0 assign process. --
    p_str5_ce0_assign_proc : process(ap_CS_fsm)
    begin
        if ((ap_ST_st10_fsm_9 = ap_CS_fsm)) then 
            p_str5_ce0 <= ap_const_logic_1;
        else 
            p_str5_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_str5_load_cast_fu_261_p1 <= std_logic_vector(resize(unsigned(p_str5_q0),8));
    tmp_10_fu_213_p1 <= debug_ready(1 - 1 downto 0);
    tmp_11_fu_247_p1 <= debug_ready(1 - 1 downto 0);
    tmp_13_fu_271_p1 <= debug_ready(1 - 1 downto 0);
    tmp_i3_fu_231_p2 <= "1" when (p_0_rec_i2_reg_138 = ap_const_lv2_3) else "0";
    tmp_i_fu_197_p2 <= "1" when (p_0_rec_i_reg_127 = ap_const_lv4_D) else "0";
    x2_fu_222_p1 <= in_r_dout;
    y1_fu_265_p2 <= std_logic_vector(unsigned(x1_reg_304) + unsigned(ap_const_lv32_1));
    y2_fu_280_p1 <= grp_sinf_or_cosf_fu_164_ap_return;
end behav;
