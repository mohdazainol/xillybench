// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2014.1
// Copyright (C) 2014 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module big_mult_v3_94_17_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        a_V,
        ap_return
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 4'b0000;
parameter    ap_ST_st2_fsm_1 = 4'b1;
parameter    ap_ST_st3_fsm_2 = 4'b10;
parameter    ap_ST_st4_fsm_3 = 4'b11;
parameter    ap_ST_st5_fsm_4 = 4'b100;
parameter    ap_ST_st6_fsm_5 = 4'b101;
parameter    ap_ST_st7_fsm_6 = 4'b110;
parameter    ap_ST_st8_fsm_7 = 4'b111;
parameter    ap_ST_st9_fsm_8 = 4'b1000;
parameter    ap_ST_st10_fsm_9 = 4'b1001;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv3_0 = 3'b000;
parameter    ap_const_lv4_1 = 4'b1;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv64_0 = 64'b0000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv3_6 = 3'b110;
parameter    ap_const_lv3_1 = 3'b1;
parameter    ap_const_lv3_5 = 3'b101;
parameter    ap_const_lv7_10 = 7'b10000;
parameter    ap_const_lv7_5D = 7'b1011101;
parameter    ap_const_lv94_3243F6A8885A308D3131 = 94'b110010010000111111011010101000100010000101101000110000100011010011000100110001;
parameter    ap_const_lv4_C = 4'b1100;
parameter    ap_const_lv4_F = 4'b1111;
parameter    ap_const_lv32_11 = 32'b10001;
parameter    ap_const_lv32_2F = 32'b101111;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv5_6 = 5'b110;
parameter    ap_const_lv8_BC = 8'b10111100;
parameter    ap_const_lv8_10 = 8'b10000;
parameter    ap_const_lv8_BB = 8'b10111011;
parameter    ap_const_lv188_lc_1 = 188'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_true = 1'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [77:0] a_V;
output  [187:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[187:0] ap_return;
reg   [3:0] ap_CS_fsm = 4'b0000;
wire   [93:0] a_V_cast_fu_214_p1;
reg   [93:0] a_V_cast_reg_651;
wire   [2:0] i_4_fu_224_p2;
reg   [2:0] i_4_reg_659;
wire   [31:0] Lo_assign_cast_fu_246_p1;
reg   [31:0] Lo_assign_cast_reg_664;
wire   [0:0] exitcond1_fu_218_p2;
wire   [31:0] Ui_2_cast_fu_264_p1;
reg   [31:0] Ui_2_cast_reg_669;
wire   [2:0] j_2_fu_274_p2;
wire   [4:0] i_1_cast_fu_408_p1;
reg   [4:0] i_1_cast_reg_687;
wire   [0:0] exitcond2_fu_412_p2;
reg   [3:0] pps_V_addr_2_reg_700;
wire   [2:0] j_3_fu_463_p2;
reg   [2:0] j_3_reg_708;
wire   [0:0] or_cond_fu_492_p2;
reg   [0:0] or_cond_reg_713;
wire   [0:0] exitcond4_fu_457_p2;
wire   [3:0] i_6_fu_547_p2;
wire   [3:0] i_5_fu_570_p2;
reg   [3:0] i_5_reg_730;
wire   [0:0] exitcond_fu_564_p2;
wire   [187:0] p_Result_4_fu_643_p3;
reg   [5:0] pp_V_1_address0;
reg    pp_V_1_ce0;
reg    pp_V_1_we0;
wire   [33:0] pp_V_1_d0;
wire   [33:0] pp_V_1_q0;
reg   [3:0] pps_V_address0;
reg    pps_V_ce0;
reg    pps_V_we0;
reg   [47:0] pps_V_d0;
wire   [47:0] pps_V_q0;
reg   [2:0] i_reg_143;
wire   [0:0] exitcond3_fu_268_p2;
reg   [2:0] j_reg_155;
reg   [3:0] i_1_reg_166;
reg   [2:0] j_1_reg_178;
reg   [187:0] p_Val2_24_reg_189;
reg   [3:0] i_2_reg_201;
wire   [63:0] tmp_47_fu_398_p1;
wire   [63:0] tmp_39_fu_424_p1;
wire   [63:0] tmp_37_fu_429_p1;
wire   [63:0] tmp_56_fu_542_p1;
wire   [63:0] tmp_50_fu_576_p1;
wire   [47:0] tmp_fu_403_p1;
wire   [47:0] r_V_6_fu_444_p1;
wire   [47:0] tmp_58_fu_557_p2;
wire   [6:0] Lo_assign_fu_236_p4;
wire   [0:0] tmp_s_fu_230_p2;
wire   [6:0] tmp_36_fu_250_p2;
wire   [6:0] Ui_2_fu_256_p3;
wire   [6:0] Lo_assign_1_fu_286_p4;
wire   [0:0] tmp_40_fu_280_p2;
wire   [6:0] tmp_41_fu_300_p2;
wire   [6:0] Uj_fu_306_p3;
wire   [31:0] tmp_54_cast_fu_296_p1;
wire   [31:0] Uj_cast_fu_314_p1;
wire   [93:0] p_Result_16_fu_318_p4;
wire   [93:0] p_Result_17_fu_325_p4;
wire   [33:0] tmp_44_fu_343_p0;
wire   [33:0] tmp_44_fu_343_p1;
wire   [5:0] tmp_45_fu_354_p3;
wire   [3:0] tmp_46_fu_366_p3;
wire   [6:0] p_shl_cast_fu_362_p1;
wire   [6:0] p_shl5_cast_fu_374_p1;
wire   [6:0] p_addr3_fu_378_p2;
wire   [7:0] p_addr4_fu_388_p0;
wire   [7:0] tmp_45_trn_cast_fu_350_p1;
wire   [7:0] p_addr4_fu_388_p2;
wire   [31:0] tmp_47_fu_398_p0;
wire   [3:0] tmp_38_fu_418_p2;
wire   [30:0] r_V_fu_434_p4;
wire   [3:0] j_1_cast4_cast_cast_fu_453_p1;
wire   [0:0] ult_fu_469_p2;
wire   [4:0] j_1_cast4_cast_fu_449_p1;
wire   [4:0] tmp_52_fu_481_p2;
wire   [0:0] rev9_fu_475_p2;
wire   [0:0] tmp_53_fu_486_p2;
wire   [5:0] tmp_54_fu_502_p3;
wire   [3:0] tmp_55_fu_514_p3;
wire   [6:0] p_shl6_cast_fu_510_p1;
wire   [6:0] p_shl7_cast_fu_522_p1;
wire   [6:0] p_addr_fu_526_p2;
wire   [7:0] p_addr1_fu_536_p0;
wire   [7:0] p_addr1_fu_536_p1;
wire   [7:0] p_addr1_fu_536_p2;
wire   [47:0] tmp_57_fu_553_p1;
wire   [7:0] Li_fu_581_p3;
wire   [7:0] Ui_fu_599_p2;
wire   [0:0] tmp_49_fu_605_p2;
wire   [7:0] Hi_assign_fu_611_p3;
wire   [16:0] tmp_51_fu_623_p1;
wire   [187:0] loc_V_fu_627_p1;
wire   [31:0] Li_cast_fu_589_p1;
wire   [31:0] Hi_assign_cast_fu_619_p1;
wire   [0:0] tmp_48_fu_593_p2;
wire   [187:0] p_Result_s_fu_631_p5;
reg   [187:0] ap_return_preg = 188'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
reg   [3:0] ap_NS_fsm;


big_mult_v3_94_17_s_pp_V_1 #(
    .DataWidth( 34 ),
    .AddressRange( 36 ),
    .AddressWidth( 6 ))
pp_V_1_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( pp_V_1_address0 ),
    .ce0( pp_V_1_ce0 ),
    .we0( pp_V_1_we0 ),
    .d0( pp_V_1_d0 ),
    .q0( pp_V_1_q0 )
);

big_mult_v3_94_17_s_pps_V #(
    .DataWidth( 48 ),
    .AddressRange( 12 ),
    .AddressWidth( 4 ))
pps_V_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( pps_V_address0 ),
    .ce0( pps_V_ce0 ),
    .we0( pps_V_we0 ),
    .d0( pps_V_d0 ),
    .q0( pps_V_q0 )
);



/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// ap_return_preg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_return_preg
    if (ap_rst == 1'b1) begin
        ap_return_preg <= ap_const_lv188_lc_1;
    end else begin
        if (((ap_ST_st9_fsm_8 == ap_CS_fsm) & ~(ap_const_lv1_0 == exitcond_fu_564_p2))) begin
            ap_return_preg <= p_Val2_24_reg_189;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st7_fsm_6 == ap_CS_fsm) & ~(ap_const_lv1_0 == exitcond4_fu_457_p2))) begin
        i_1_reg_166 <= i_6_fu_547_p2;
    end else if ((ap_ST_st4_fsm_3 == ap_CS_fsm)) begin
        i_1_reg_166 <= ap_const_lv4_1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st5_fsm_4 == ap_CS_fsm) & ~(ap_const_lv1_0 == exitcond2_fu_412_p2))) begin
        i_2_reg_201 <= ap_const_lv4_0;
    end else if ((ap_ST_st10_fsm_9 == ap_CS_fsm)) begin
        i_2_reg_201 <= i_5_reg_730;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st3_fsm_2 == ap_CS_fsm) & ~(ap_const_lv1_0 == exitcond3_fu_268_p2))) begin
        i_reg_143 <= i_4_reg_659;
    end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
        i_reg_143 <= ap_const_lv3_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st8_fsm_7 == ap_CS_fsm)) begin
        j_1_reg_178 <= j_3_reg_708;
    end else if ((ap_ST_st6_fsm_5 == ap_CS_fsm)) begin
        j_1_reg_178 <= ap_const_lv3_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st2_fsm_1 == ap_CS_fsm) & (exitcond1_fu_218_p2 == ap_const_lv1_0))) begin
        j_reg_155 <= ap_const_lv3_0;
    end else if (((ap_ST_st3_fsm_2 == ap_CS_fsm) & (ap_const_lv1_0 == exitcond3_fu_268_p2))) begin
        j_reg_155 <= j_2_fu_274_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st2_fsm_1 == ap_CS_fsm) & (exitcond1_fu_218_p2 == ap_const_lv1_0))) begin
        Lo_assign_cast_reg_664[0] <= Lo_assign_cast_fu_246_p1[0];
Lo_assign_cast_reg_664[1] <= Lo_assign_cast_fu_246_p1[1];
Lo_assign_cast_reg_664[2] <= Lo_assign_cast_fu_246_p1[2];
Lo_assign_cast_reg_664[4] <= Lo_assign_cast_fu_246_p1[4];
Lo_assign_cast_reg_664[5] <= Lo_assign_cast_fu_246_p1[5];
Lo_assign_cast_reg_664[6] <= Lo_assign_cast_fu_246_p1[6];
        Ui_2_cast_reg_669[0] <= Ui_2_cast_fu_264_p1[0];
Ui_2_cast_reg_669[1] <= Ui_2_cast_fu_264_p1[1];
Ui_2_cast_reg_669[2] <= Ui_2_cast_fu_264_p1[2];
Ui_2_cast_reg_669[3] <= Ui_2_cast_fu_264_p1[3];
Ui_2_cast_reg_669[4] <= Ui_2_cast_fu_264_p1[4];
Ui_2_cast_reg_669[5] <= Ui_2_cast_fu_264_p1[5];
Ui_2_cast_reg_669[6] <= Ui_2_cast_fu_264_p1[6];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
        a_V_cast_reg_651[0] <= a_V_cast_fu_214_p1[0];
a_V_cast_reg_651[1] <= a_V_cast_fu_214_p1[1];
a_V_cast_reg_651[2] <= a_V_cast_fu_214_p1[2];
a_V_cast_reg_651[3] <= a_V_cast_fu_214_p1[3];
a_V_cast_reg_651[4] <= a_V_cast_fu_214_p1[4];
a_V_cast_reg_651[5] <= a_V_cast_fu_214_p1[5];
a_V_cast_reg_651[6] <= a_V_cast_fu_214_p1[6];
a_V_cast_reg_651[7] <= a_V_cast_fu_214_p1[7];
a_V_cast_reg_651[8] <= a_V_cast_fu_214_p1[8];
a_V_cast_reg_651[9] <= a_V_cast_fu_214_p1[9];
a_V_cast_reg_651[10] <= a_V_cast_fu_214_p1[10];
a_V_cast_reg_651[11] <= a_V_cast_fu_214_p1[11];
a_V_cast_reg_651[12] <= a_V_cast_fu_214_p1[12];
a_V_cast_reg_651[13] <= a_V_cast_fu_214_p1[13];
a_V_cast_reg_651[14] <= a_V_cast_fu_214_p1[14];
a_V_cast_reg_651[15] <= a_V_cast_fu_214_p1[15];
a_V_cast_reg_651[16] <= a_V_cast_fu_214_p1[16];
a_V_cast_reg_651[17] <= a_V_cast_fu_214_p1[17];
a_V_cast_reg_651[18] <= a_V_cast_fu_214_p1[18];
a_V_cast_reg_651[19] <= a_V_cast_fu_214_p1[19];
a_V_cast_reg_651[20] <= a_V_cast_fu_214_p1[20];
a_V_cast_reg_651[21] <= a_V_cast_fu_214_p1[21];
a_V_cast_reg_651[22] <= a_V_cast_fu_214_p1[22];
a_V_cast_reg_651[23] <= a_V_cast_fu_214_p1[23];
a_V_cast_reg_651[24] <= a_V_cast_fu_214_p1[24];
a_V_cast_reg_651[25] <= a_V_cast_fu_214_p1[25];
a_V_cast_reg_651[26] <= a_V_cast_fu_214_p1[26];
a_V_cast_reg_651[27] <= a_V_cast_fu_214_p1[27];
a_V_cast_reg_651[28] <= a_V_cast_fu_214_p1[28];
a_V_cast_reg_651[29] <= a_V_cast_fu_214_p1[29];
a_V_cast_reg_651[30] <= a_V_cast_fu_214_p1[30];
a_V_cast_reg_651[31] <= a_V_cast_fu_214_p1[31];
a_V_cast_reg_651[32] <= a_V_cast_fu_214_p1[32];
a_V_cast_reg_651[33] <= a_V_cast_fu_214_p1[33];
a_V_cast_reg_651[34] <= a_V_cast_fu_214_p1[34];
a_V_cast_reg_651[35] <= a_V_cast_fu_214_p1[35];
a_V_cast_reg_651[36] <= a_V_cast_fu_214_p1[36];
a_V_cast_reg_651[37] <= a_V_cast_fu_214_p1[37];
a_V_cast_reg_651[38] <= a_V_cast_fu_214_p1[38];
a_V_cast_reg_651[39] <= a_V_cast_fu_214_p1[39];
a_V_cast_reg_651[40] <= a_V_cast_fu_214_p1[40];
a_V_cast_reg_651[41] <= a_V_cast_fu_214_p1[41];
a_V_cast_reg_651[42] <= a_V_cast_fu_214_p1[42];
a_V_cast_reg_651[43] <= a_V_cast_fu_214_p1[43];
a_V_cast_reg_651[44] <= a_V_cast_fu_214_p1[44];
a_V_cast_reg_651[45] <= a_V_cast_fu_214_p1[45];
a_V_cast_reg_651[46] <= a_V_cast_fu_214_p1[46];
a_V_cast_reg_651[47] <= a_V_cast_fu_214_p1[47];
a_V_cast_reg_651[48] <= a_V_cast_fu_214_p1[48];
a_V_cast_reg_651[49] <= a_V_cast_fu_214_p1[49];
a_V_cast_reg_651[50] <= a_V_cast_fu_214_p1[50];
a_V_cast_reg_651[51] <= a_V_cast_fu_214_p1[51];
a_V_cast_reg_651[52] <= a_V_cast_fu_214_p1[52];
a_V_cast_reg_651[53] <= a_V_cast_fu_214_p1[53];
a_V_cast_reg_651[54] <= a_V_cast_fu_214_p1[54];
a_V_cast_reg_651[55] <= a_V_cast_fu_214_p1[55];
a_V_cast_reg_651[56] <= a_V_cast_fu_214_p1[56];
a_V_cast_reg_651[57] <= a_V_cast_fu_214_p1[57];
a_V_cast_reg_651[58] <= a_V_cast_fu_214_p1[58];
a_V_cast_reg_651[59] <= a_V_cast_fu_214_p1[59];
a_V_cast_reg_651[60] <= a_V_cast_fu_214_p1[60];
a_V_cast_reg_651[61] <= a_V_cast_fu_214_p1[61];
a_V_cast_reg_651[62] <= a_V_cast_fu_214_p1[62];
a_V_cast_reg_651[63] <= a_V_cast_fu_214_p1[63];
a_V_cast_reg_651[64] <= a_V_cast_fu_214_p1[64];
a_V_cast_reg_651[65] <= a_V_cast_fu_214_p1[65];
a_V_cast_reg_651[66] <= a_V_cast_fu_214_p1[66];
a_V_cast_reg_651[67] <= a_V_cast_fu_214_p1[67];
a_V_cast_reg_651[68] <= a_V_cast_fu_214_p1[68];
a_V_cast_reg_651[69] <= a_V_cast_fu_214_p1[69];
a_V_cast_reg_651[70] <= a_V_cast_fu_214_p1[70];
a_V_cast_reg_651[71] <= a_V_cast_fu_214_p1[71];
a_V_cast_reg_651[72] <= a_V_cast_fu_214_p1[72];
a_V_cast_reg_651[73] <= a_V_cast_fu_214_p1[73];
a_V_cast_reg_651[74] <= a_V_cast_fu_214_p1[74];
a_V_cast_reg_651[75] <= a_V_cast_fu_214_p1[75];
a_V_cast_reg_651[76] <= a_V_cast_fu_214_p1[76];
a_V_cast_reg_651[77] <= a_V_cast_fu_214_p1[77];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st5_fsm_4 == ap_CS_fsm)) begin
        i_1_cast_reg_687[0] <= i_1_cast_fu_408_p1[0];
i_1_cast_reg_687[1] <= i_1_cast_fu_408_p1[1];
i_1_cast_reg_687[2] <= i_1_cast_fu_408_p1[2];
i_1_cast_reg_687[3] <= i_1_cast_fu_408_p1[3];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st2_fsm_1 == ap_CS_fsm)) begin
        i_4_reg_659 <= i_4_fu_224_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st9_fsm_8 == ap_CS_fsm)) begin
        i_5_reg_730 <= i_5_fu_570_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st7_fsm_6 == ap_CS_fsm)) begin
        j_3_reg_708 <= j_3_fu_463_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st7_fsm_6 == ap_CS_fsm) & (ap_const_lv1_0 == exitcond4_fu_457_p2))) begin
        or_cond_reg_713 <= or_cond_fu_492_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st10_fsm_9 == ap_CS_fsm)) begin
        p_Val2_24_reg_189 <= p_Result_4_fu_643_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st6_fsm_5 == ap_CS_fsm)) begin
        pps_V_addr_2_reg_700 <= tmp_37_fu_429_p1;
    end
end

/// ap_done assign process. ///
always @ (ap_start or ap_CS_fsm or exitcond_fu_564_p2)
begin
    if (((~(ap_const_logic_1 == ap_start) & (ap_ST_st1_fsm_0 == ap_CS_fsm)) | ((ap_ST_st9_fsm_8 == ap_CS_fsm) & ~(ap_const_lv1_0 == exitcond_fu_564_p2)))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_start or ap_CS_fsm)
begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_ST_st1_fsm_0 == ap_CS_fsm))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_ready assign process. ///
always @ (ap_CS_fsm or exitcond_fu_564_p2)
begin
    if (((ap_ST_st9_fsm_8 == ap_CS_fsm) & ~(ap_const_lv1_0 == exitcond_fu_564_p2))) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

/// ap_return assign process. ///
always @ (ap_CS_fsm or exitcond_fu_564_p2 or p_Val2_24_reg_189 or ap_return_preg)
begin
    if (((ap_ST_st9_fsm_8 == ap_CS_fsm) & ~(ap_const_lv1_0 == exitcond_fu_564_p2))) begin
        ap_return = p_Val2_24_reg_189;
    end else begin
        ap_return = ap_return_preg;
    end
end

/// pp_V_1_address0 assign process. ///
always @ (ap_CS_fsm or tmp_47_fu_398_p1 or tmp_56_fu_542_p1)
begin
    if ((ap_ST_st3_fsm_2 == ap_CS_fsm)) begin
        pp_V_1_address0 = tmp_47_fu_398_p1;
    end else if ((ap_ST_st7_fsm_6 == ap_CS_fsm)) begin
        pp_V_1_address0 = tmp_56_fu_542_p1;
    end else if ((ap_ST_st2_fsm_1 == ap_CS_fsm)) begin
        pp_V_1_address0 = ap_const_lv64_0;
    end else begin
        pp_V_1_address0 = 'bx;
    end
end

/// pp_V_1_ce0 assign process. ///
always @ (ap_CS_fsm)
begin
    if (((ap_ST_st2_fsm_1 == ap_CS_fsm) | (ap_ST_st3_fsm_2 == ap_CS_fsm) | (ap_ST_st7_fsm_6 == ap_CS_fsm))) begin
        pp_V_1_ce0 = ap_const_logic_1;
    end else begin
        pp_V_1_ce0 = ap_const_logic_0;
    end
end

/// pp_V_1_we0 assign process. ///
always @ (ap_CS_fsm or exitcond3_fu_268_p2)
begin
    if (((ap_ST_st3_fsm_2 == ap_CS_fsm) & (ap_const_lv1_0 == exitcond3_fu_268_p2))) begin
        pp_V_1_we0 = ap_const_logic_1;
    end else begin
        pp_V_1_we0 = ap_const_logic_0;
    end
end

/// pps_V_address0 assign process. ///
always @ (ap_CS_fsm or pps_V_addr_2_reg_700 or tmp_39_fu_424_p1 or tmp_37_fu_429_p1 or tmp_50_fu_576_p1)
begin
    if ((ap_ST_st6_fsm_5 == ap_CS_fsm)) begin
        pps_V_address0 = tmp_37_fu_429_p1;
    end else if ((ap_ST_st4_fsm_3 == ap_CS_fsm)) begin
        pps_V_address0 = ap_const_lv64_0;
    end else if ((ap_ST_st9_fsm_8 == ap_CS_fsm)) begin
        pps_V_address0 = tmp_50_fu_576_p1;
    end else if (((ap_ST_st7_fsm_6 == ap_CS_fsm) | (ap_ST_st8_fsm_7 == ap_CS_fsm))) begin
        pps_V_address0 = pps_V_addr_2_reg_700;
    end else if ((ap_ST_st5_fsm_4 == ap_CS_fsm)) begin
        pps_V_address0 = tmp_39_fu_424_p1;
    end else begin
        pps_V_address0 = 'bx;
    end
end

/// pps_V_ce0 assign process. ///
always @ (ap_CS_fsm)
begin
    if (((ap_ST_st5_fsm_4 == ap_CS_fsm) | (ap_ST_st6_fsm_5 == ap_CS_fsm) | (ap_ST_st7_fsm_6 == ap_CS_fsm) | (ap_ST_st9_fsm_8 == ap_CS_fsm) | (ap_ST_st4_fsm_3 == ap_CS_fsm) | (ap_ST_st8_fsm_7 == ap_CS_fsm))) begin
        pps_V_ce0 = ap_const_logic_1;
    end else begin
        pps_V_ce0 = ap_const_logic_0;
    end
end

/// pps_V_d0 assign process. ///
always @ (ap_CS_fsm or tmp_fu_403_p1 or r_V_6_fu_444_p1 or tmp_58_fu_557_p2)
begin
    if ((ap_ST_st8_fsm_7 == ap_CS_fsm)) begin
        pps_V_d0 = tmp_58_fu_557_p2;
    end else if ((ap_ST_st6_fsm_5 == ap_CS_fsm)) begin
        pps_V_d0 = r_V_6_fu_444_p1;
    end else if ((ap_ST_st4_fsm_3 == ap_CS_fsm)) begin
        pps_V_d0 = tmp_fu_403_p1;
    end else begin
        pps_V_d0 = 'bx;
    end
end

/// pps_V_we0 assign process. ///
always @ (ap_CS_fsm or or_cond_reg_713)
begin
    if (((ap_ST_st6_fsm_5 == ap_CS_fsm) | (ap_ST_st4_fsm_3 == ap_CS_fsm) | ((ap_ST_st8_fsm_7 == ap_CS_fsm) & ~(ap_const_lv1_0 == or_cond_reg_713)))) begin
        pps_V_we0 = ap_const_logic_1;
    end else begin
        pps_V_we0 = ap_const_logic_0;
    end
end
always @ (ap_start or ap_CS_fsm or exitcond1_fu_218_p2 or exitcond2_fu_412_p2 or exitcond4_fu_457_p2 or exitcond_fu_564_p2 or exitcond3_fu_268_p2)
begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
            if (~(ap_start == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        ap_ST_st2_fsm_1 : 
            if ((exitcond1_fu_218_p2 == ap_const_lv1_0)) begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end
        ap_ST_st3_fsm_2 : 
            if ((ap_const_lv1_0 == exitcond3_fu_268_p2)) begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end
        ap_ST_st4_fsm_3 : 
            ap_NS_fsm = ap_ST_st5_fsm_4;
        ap_ST_st5_fsm_4 : 
            if (~(ap_const_lv1_0 == exitcond2_fu_412_p2)) begin
                ap_NS_fsm = ap_ST_st9_fsm_8;
            end else begin
                ap_NS_fsm = ap_ST_st6_fsm_5;
            end
        ap_ST_st6_fsm_5 : 
            ap_NS_fsm = ap_ST_st7_fsm_6;
        ap_ST_st7_fsm_6 : 
            if (~(ap_const_lv1_0 == exitcond4_fu_457_p2)) begin
                ap_NS_fsm = ap_ST_st5_fsm_4;
            end else begin
                ap_NS_fsm = ap_ST_st8_fsm_7;
            end
        ap_ST_st8_fsm_7 : 
            ap_NS_fsm = ap_ST_st7_fsm_6;
        ap_ST_st9_fsm_8 : 
            if (~(ap_const_lv1_0 == exitcond_fu_564_p2)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_st10_fsm_9;
            end
        ap_ST_st10_fsm_9 : 
            ap_NS_fsm = ap_ST_st9_fsm_8;
        default : 
            ap_NS_fsm = 'bx;
    endcase
end
assign Hi_assign_cast_fu_619_p1 = $unsigned(Hi_assign_fu_611_p3);
assign Hi_assign_fu_611_p3 = ((tmp_49_fu_605_p2)? ap_const_lv8_BB: Ui_fu_599_p2);
assign Li_cast_fu_589_p1 = $unsigned(Li_fu_581_p3);
assign Li_fu_581_p3 = {{i_2_reg_201}, {i_2_reg_201}};
assign Lo_assign_1_fu_286_p4 = {{{j_reg_155}, {ap_const_lv1_0}}, {j_reg_155}};
assign Lo_assign_cast_fu_246_p1 = $unsigned(Lo_assign_fu_236_p4);
assign Lo_assign_fu_236_p4 = {{{i_reg_143}, {ap_const_lv1_0}}, {i_reg_143}};
assign Ui_2_cast_fu_264_p1 = $unsigned(Ui_2_fu_256_p3);
assign Ui_2_fu_256_p3 = ((tmp_s_fu_230_p2)? ap_const_lv7_5D: tmp_36_fu_250_p2);
assign Ui_fu_599_p2 = (Li_fu_581_p3 + ap_const_lv8_10);
assign Uj_cast_fu_314_p1 = $unsigned(Uj_fu_306_p3);
assign Uj_fu_306_p3 = ((tmp_40_fu_280_p2)? ap_const_lv7_5D: tmp_41_fu_300_p2);
assign a_V_cast_fu_214_p1 = $unsigned(a_V);
assign exitcond1_fu_218_p2 = (i_reg_143 == ap_const_lv3_6? 1'b1: 1'b0);
assign exitcond2_fu_412_p2 = (i_1_reg_166 == ap_const_lv4_C? 1'b1: 1'b0);
assign exitcond3_fu_268_p2 = (j_reg_155 == ap_const_lv3_6? 1'b1: 1'b0);
assign exitcond4_fu_457_p2 = (j_1_reg_178 == ap_const_lv3_6? 1'b1: 1'b0);
assign exitcond_fu_564_p2 = (i_2_reg_201 == ap_const_lv4_C? 1'b1: 1'b0);
assign i_1_cast_fu_408_p1 = $unsigned(i_1_reg_166);
assign i_4_fu_224_p2 = (i_reg_143 + ap_const_lv3_1);
assign i_5_fu_570_p2 = (i_2_reg_201 + ap_const_lv4_1);
assign i_6_fu_547_p2 = (i_1_reg_166 + ap_const_lv4_1);
assign j_1_cast4_cast_cast_fu_453_p1 = $unsigned(j_1_reg_178);
assign j_1_cast4_cast_fu_449_p1 = $unsigned(j_1_reg_178);
assign j_2_fu_274_p2 = (j_reg_155 + ap_const_lv3_1);
assign j_3_fu_463_p2 = (j_1_reg_178 + ap_const_lv3_1);
assign loc_V_fu_627_p1 = $unsigned(tmp_51_fu_623_p1);
assign or_cond_fu_492_p2 = (rev9_fu_475_p2 & tmp_53_fu_486_p2);
wire [7-1:0] p_Result_16_fu_318_p4_vh_buf;
wire [7-1:0] p_Result_16_fu_318_p4_vl_buf;
wire [94-1:0] p_Result_16_fu_318_p4_vi_buf;
wire [94-1:0] p_Result_16_fu_318_p4_vo_buf;
wire [94-1:0] p_Result_16_fu_318_p4_vi_r;
wire [7:0] p_Result_16_fu_318_p4_length;
wire [94-1:0] p_Result_16_fu_318_p4_mask;

genvar ap_tvar_int_0;
generate
    for (ap_tvar_int_0 = 0; ap_tvar_int_0 < 94; ap_tvar_int_0 = ap_tvar_int_0 + 1) begin :p_Result_16_fu_318_p4_label0
        assign p_Result_16_fu_318_p4_vi_r[ap_tvar_int_0] = a_V_cast_reg_651[94-1-ap_tvar_int_0];
    end
endgenerate

assign p_Result_16_fu_318_p4_vh_buf = (Ui_2_cast_reg_669 >= Lo_assign_cast_reg_664)? Ui_2_cast_reg_669 : (94 -1- Ui_2_cast_reg_669);
assign p_Result_16_fu_318_p4_vl_buf = (Ui_2_cast_reg_669 >= Lo_assign_cast_reg_664)? Lo_assign_cast_reg_664 : (94 -1-Lo_assign_cast_reg_664);
assign p_Result_16_fu_318_p4_vi_buf = (Ui_2_cast_reg_669 >= Lo_assign_cast_reg_664)? a_V_cast_reg_651 : p_Result_16_fu_318_p4_vi_r;
assign p_Result_16_fu_318_p4_length = p_Result_16_fu_318_p4_vh_buf - p_Result_16_fu_318_p4_vl_buf + 1'b1;
assign p_Result_16_fu_318_p4_mask = ~({94{1'b1}} << p_Result_16_fu_318_p4_length);
assign p_Result_16_fu_318_p4 = (p_Result_16_fu_318_p4_vi_buf >> p_Result_16_fu_318_p4_vl_buf) & p_Result_16_fu_318_p4_mask;

wire [7-1:0] p_Result_17_fu_325_p4_vh_buf;
wire [7-1:0] p_Result_17_fu_325_p4_vl_buf;
wire [94-1:0] p_Result_17_fu_325_p4_vi_buf;
wire [94-1:0] p_Result_17_fu_325_p4_vo_buf;
wire [94-1:0] p_Result_17_fu_325_p4_vi_r;
wire [7:0] p_Result_17_fu_325_p4_length;
wire [94-1:0] p_Result_17_fu_325_p4_mask;

genvar ap_tvar_int_1;
generate
    for (ap_tvar_int_1 = 0; ap_tvar_int_1 < 94; ap_tvar_int_1 = ap_tvar_int_1 + 1) begin :p_Result_17_fu_325_p4_label0
        assign p_Result_17_fu_325_p4_vi_r[ap_tvar_int_1] = ap_const_lv94_3243F6A8885A308D3131[94-1-ap_tvar_int_1];
    end
endgenerate

assign p_Result_17_fu_325_p4_vh_buf = (Uj_cast_fu_314_p1 >= tmp_54_cast_fu_296_p1)? Uj_cast_fu_314_p1 : (94 -1- Uj_cast_fu_314_p1);
assign p_Result_17_fu_325_p4_vl_buf = (Uj_cast_fu_314_p1 >= tmp_54_cast_fu_296_p1)? tmp_54_cast_fu_296_p1 : (94 -1-tmp_54_cast_fu_296_p1);
assign p_Result_17_fu_325_p4_vi_buf = (Uj_cast_fu_314_p1 >= tmp_54_cast_fu_296_p1)? ap_const_lv94_3243F6A8885A308D3131 : p_Result_17_fu_325_p4_vi_r;
assign p_Result_17_fu_325_p4_length = p_Result_17_fu_325_p4_vh_buf - p_Result_17_fu_325_p4_vl_buf + 1'b1;
assign p_Result_17_fu_325_p4_mask = ~({94{1'b1}} << p_Result_17_fu_325_p4_length);
assign p_Result_17_fu_325_p4 = (p_Result_17_fu_325_p4_vi_buf >> p_Result_17_fu_325_p4_vl_buf) & p_Result_17_fu_325_p4_mask;

assign p_Result_4_fu_643_p3 = ((tmp_48_fu_593_p2)? p_Result_s_fu_631_p5: p_Val2_24_reg_189);
wire [8-1:0] p_Result_s_fu_631_p5_vHi_buf;
wire [8-1:0] p_Result_s_fu_631_p5_vLo_buf;
wire [188-1:0] p_Result_s_fu_631_p5_v1_buf;
wire [188-1:0] p_Result_s_fu_631_p5_v1_buf_r;
wire [188-1:0] p_Result_s_fu_631_p5_v1_tmp;
wire [8-1:0] p_Result_s_fu_631_p5_v1_shift;
wire [188-1:0] p_Result_s_fu_631_p5_mask0;
wire [188-1:0] p_Result_s_fu_631_p5_mask1;
wire [188-1:0] p_Result_s_fu_631_p5_mask2;

genvar ap_tvar_int_2;
generate
    for (ap_tvar_int_2 = 0; ap_tvar_int_2 < 188; ap_tvar_int_2 = ap_tvar_int_2 + 1) begin :p_Result_s_fu_631_p5_label0
        assign p_Result_s_fu_631_p5_v1_buf_r[ap_tvar_int_2] = p_Result_s_fu_631_p5_v1_buf[188-1-ap_tvar_int_2];
    end
endgenerate

assign p_Result_s_fu_631_p5_vHi_buf = (Hi_assign_cast_fu_619_p1 >= Li_cast_fu_589_p1)? Hi_assign_cast_fu_619_p1 : Li_cast_fu_589_p1;
assign p_Result_s_fu_631_p5_vLo_buf = (Hi_assign_cast_fu_619_p1 >= Li_cast_fu_589_p1)? Li_cast_fu_589_p1 : Hi_assign_cast_fu_619_p1;
assign p_Result_s_fu_631_p5_v1_buf = loc_V_fu_627_p1;
assign p_Result_s_fu_631_p5_v1_shift = (Hi_assign_cast_fu_619_p1 >= Li_cast_fu_589_p1)? Li_cast_fu_589_p1 : (188-1-Li_cast_fu_589_p1);
assign p_Result_s_fu_631_p5_v1_tmp = (Hi_assign_cast_fu_619_p1 >= Li_cast_fu_589_p1)? (p_Result_s_fu_631_p5_v1_buf << p_Result_s_fu_631_p5_v1_shift) : (p_Result_s_fu_631_p5_v1_buf_r >> p_Result_s_fu_631_p5_v1_shift);
assign p_Result_s_fu_631_p5_mask0 = {{(188-1){1'b1}}, 1'b0} << p_Result_s_fu_631_p5_vHi_buf;
assign p_Result_s_fu_631_p5_mask1 = ~({(188){1'b1}} << p_Result_s_fu_631_p5_vLo_buf);
assign p_Result_s_fu_631_p5_mask2 = p_Result_s_fu_631_p5_mask0 | p_Result_s_fu_631_p5_mask1;
assign p_Result_s_fu_631_p5 = (p_Val2_24_reg_189 & p_Result_s_fu_631_p5_mask2) | (p_Result_s_fu_631_p5_v1_tmp & ~p_Result_s_fu_631_p5_mask2);

assign p_addr1_fu_536_p0 = $signed(p_addr_fu_526_p2);
assign p_addr1_fu_536_p1 = $signed(tmp_52_fu_481_p2);
assign p_addr1_fu_536_p2 = (p_addr1_fu_536_p0 + p_addr1_fu_536_p1);
assign p_addr3_fu_378_p2 = (p_shl_cast_fu_362_p1 - p_shl5_cast_fu_374_p1);
assign p_addr4_fu_388_p0 = $signed(p_addr3_fu_378_p2);
assign p_addr4_fu_388_p2 = (p_addr4_fu_388_p0 + tmp_45_trn_cast_fu_350_p1);
assign p_addr_fu_526_p2 = (p_shl6_cast_fu_510_p1 - p_shl7_cast_fu_522_p1);
assign p_shl5_cast_fu_374_p1 = $unsigned(tmp_46_fu_366_p3);
assign p_shl6_cast_fu_510_p1 = $unsigned(tmp_54_fu_502_p3);
assign p_shl7_cast_fu_522_p1 = $unsigned(tmp_55_fu_514_p3);
assign p_shl_cast_fu_362_p1 = $unsigned(tmp_45_fu_354_p3);
assign pp_V_1_d0 = ($signed(tmp_44_fu_343_p0) * $signed(tmp_44_fu_343_p1));
assign r_V_6_fu_444_p1 = $unsigned(r_V_fu_434_p4);
assign r_V_fu_434_p4 = {{pps_V_q0[ap_const_lv32_2F : ap_const_lv32_11]}};
assign rev9_fu_475_p2 = (ult_fu_469_p2 ^ ap_const_lv1_1);
assign tmp_36_fu_250_p2 = (Lo_assign_fu_236_p4 + ap_const_lv7_10);
assign tmp_37_fu_429_p1 = $unsigned(i_1_reg_166);
assign tmp_38_fu_418_p2 = (i_1_reg_166 + ap_const_lv4_F);
assign tmp_39_fu_424_p1 = $unsigned(tmp_38_fu_418_p2);
assign tmp_40_fu_280_p2 = (j_reg_155 == ap_const_lv3_5? 1'b1: 1'b0);
assign tmp_41_fu_300_p2 = (Lo_assign_1_fu_286_p4 + ap_const_lv7_10);
assign tmp_44_fu_343_p0 = p_Result_17_fu_325_p4[33:0];
assign tmp_44_fu_343_p1 = p_Result_16_fu_318_p4[33:0];
assign tmp_45_fu_354_p3 = {{i_reg_143}, {ap_const_lv3_0}};
assign tmp_45_trn_cast_fu_350_p1 = $unsigned(j_reg_155);
assign tmp_46_fu_366_p3 = {{i_reg_143}, {ap_const_lv1_0}};
assign tmp_47_fu_398_p0 = $signed(p_addr4_fu_388_p2);
assign tmp_47_fu_398_p1 = $unsigned(tmp_47_fu_398_p0);
assign tmp_48_fu_593_p2 = (Li_fu_581_p3 < ap_const_lv8_BC? 1'b1: 1'b0);
assign tmp_49_fu_605_p2 = (Ui_fu_599_p2 > ap_const_lv8_BB? 1'b1: 1'b0);
assign tmp_50_fu_576_p1 = $unsigned(i_2_reg_201);
assign tmp_51_fu_623_p1 = pps_V_q0[16:0];
assign tmp_52_fu_481_p2 = (i_1_cast_reg_687 - j_1_cast4_cast_fu_449_p1);
assign tmp_53_fu_486_p2 = ($signed(tmp_52_fu_481_p2) < $signed(5'b110)? 1'b1: 1'b0);
assign tmp_54_cast_fu_296_p1 = $unsigned(Lo_assign_1_fu_286_p4);
assign tmp_54_fu_502_p3 = {{j_1_reg_178}, {ap_const_lv3_0}};
assign tmp_55_fu_514_p3 = {{j_1_reg_178}, {ap_const_lv1_0}};
assign tmp_56_fu_542_p1 = $signed(p_addr1_fu_536_p2);
assign tmp_57_fu_553_p1 = $unsigned(pp_V_1_q0);
assign tmp_58_fu_557_p2 = (pps_V_q0 + tmp_57_fu_553_p1);
assign tmp_fu_403_p1 = $unsigned(pp_V_1_q0);
assign tmp_s_fu_230_p2 = (i_reg_143 == ap_const_lv3_5? 1'b1: 1'b0);
assign ult_fu_469_p2 = (i_1_reg_166 < j_1_cast4_cast_cast_fu_453_p1? 1'b1: 1'b0);
always @ (posedge ap_clk)
begin
    a_V_cast_reg_651[93:78] <= 16'b0000000000000000;
    Lo_assign_cast_reg_664[3] <= 1'b0;
    Lo_assign_cast_reg_664[31:7] <= 25'b0000000000000000000000000;
    Ui_2_cast_reg_669[31:7] <= 25'b0000000000000000000000000;
    i_1_cast_reg_687[4] <= 1'b0;
end



endmodule //big_mult_v3_94_17_s

