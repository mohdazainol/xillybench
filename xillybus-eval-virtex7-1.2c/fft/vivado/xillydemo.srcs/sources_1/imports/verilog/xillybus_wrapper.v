// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2014.1
// Copyright (C) 2014 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="xillybus_wrapper,hls_ip_2014_1,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7vx485tffg1761-2,HLS_INPUT_CLOCK=20.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=17.159500,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=0,HLS_SYN_LUT=0}" *)

module xillybus_wrapper (
        ap_clk,
        ap_rst,
        in_r_dout,
        in_r_empty_n,
        in_r_read,
        out_r_din,
        out_r_full_n,
        out_r_write,
        debug_ready,
        debug_out,
        debug_out_ap_vld
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 4'b0000;
parameter    ap_ST_st2_fsm_1 = 4'b1;
parameter    ap_ST_st3_fsm_2 = 4'b10;
parameter    ap_ST_st4_fsm_3 = 4'b11;
parameter    ap_ST_st5_fsm_4 = 4'b100;
parameter    ap_ST_st6_fsm_5 = 4'b101;
parameter    ap_ST_st7_fsm_6 = 4'b110;
parameter    ap_ST_st8_fsm_7 = 4'b111;
parameter    ap_ST_st9_fsm_8 = 4'b1000;
parameter    ap_ST_st10_fsm_9 = 4'b1001;
parameter    ap_ST_st11_fsm_10 = 4'b1010;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv4_D = 4'b1101;
parameter    ap_const_lv4_1 = 4'b1;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_true = 1'b1;

input   ap_clk;
input   ap_rst;
input  [31:0] in_r_dout;
input   in_r_empty_n;
output   in_r_read;
output  [31:0] out_r_din;
input   out_r_full_n;
output   out_r_write;
input  [7:0] debug_ready;
output  [7:0] debug_out;
output   debug_out_ap_vld;

reg in_r_read;
reg[31:0] out_r_din;
reg out_r_write;
reg debug_out_ap_vld;
wire   [3:0] p_str3_address0;
reg    p_str3_ce0;
wire   [6:0] p_str3_q0;
reg   [3:0] ap_CS_fsm = 4'b0000;
wire   [0:0] tmp_i_fu_193_p2;
reg   [0:0] tmp_i_reg_279;
wire   [3:0] p_rec_i_fu_199_p2;
reg   [3:0] p_rec_i_reg_283;
wire   [7:0] p_str3_load_cast_fu_205_p1;
reg   [7:0] p_str3_load_cast_reg_288;
reg    ap_sig_bdd_52;
reg   [31:0] n_reg_293;
reg   [31:0] direction_reg_303;
wire   [31:0] i_2_fu_227_p2;
reg   [31:0] i_2_reg_311;
wire   [0:0] tmp_fu_222_p2;
reg    ap_sig_bdd_69;
reg   [31:0] tmp_10_reg_316;
wire   [31:0] i_3_fu_253_p2;
reg   [31:0] i_3_reg_324;
wire   [0:0] tmp_9_fu_248_p2;
wire   [31:0] y_imag_q0;
reg   [31:0] y_imag_load_reg_339;
reg   [8:0] a_real_address0;
reg    a_real_ce0;
reg    a_real_we0;
reg   [31:0] a_real_d0;
wire   [31:0] a_real_q0;
reg   [8:0] a_imag_address0;
reg    a_imag_ce0;
reg    a_imag_we0;
reg   [31:0] a_imag_d0;
wire   [31:0] a_imag_q0;
reg   [8:0] y_real_address0;
reg    y_real_ce0;
reg    y_real_we0;
wire   [31:0] y_real_d0;
wire   [31:0] y_real_q0;
reg   [8:0] y_imag_address0;
reg    y_imag_ce0;
reg    y_imag_we0;
wire   [31:0] y_imag_d0;
wire    grp_fft_nrvs_two_arrays_fu_174_ap_start;
wire    grp_fft_nrvs_two_arrays_fu_174_ap_done;
wire    grp_fft_nrvs_two_arrays_fu_174_ap_idle;
wire    grp_fft_nrvs_two_arrays_fu_174_ap_ready;
wire   [31:0] grp_fft_nrvs_two_arrays_fu_174_n;
wire   [8:0] grp_fft_nrvs_two_arrays_fu_174_a_real_address0;
wire    grp_fft_nrvs_two_arrays_fu_174_a_real_ce0;
wire    grp_fft_nrvs_two_arrays_fu_174_a_real_we0;
wire   [31:0] grp_fft_nrvs_two_arrays_fu_174_a_real_d0;
wire   [31:0] grp_fft_nrvs_two_arrays_fu_174_a_real_q0;
wire   [8:0] grp_fft_nrvs_two_arrays_fu_174_a_imag_address0;
wire    grp_fft_nrvs_two_arrays_fu_174_a_imag_ce0;
wire    grp_fft_nrvs_two_arrays_fu_174_a_imag_we0;
wire   [31:0] grp_fft_nrvs_two_arrays_fu_174_a_imag_d0;
wire   [31:0] grp_fft_nrvs_two_arrays_fu_174_a_imag_q0;
wire   [8:0] grp_fft_nrvs_two_arrays_fu_174_y_real_address0;
wire    grp_fft_nrvs_two_arrays_fu_174_y_real_ce0;
wire    grp_fft_nrvs_two_arrays_fu_174_y_real_we0;
wire   [31:0] grp_fft_nrvs_two_arrays_fu_174_y_real_d0;
wire   [31:0] grp_fft_nrvs_two_arrays_fu_174_y_real_q0;
wire   [8:0] grp_fft_nrvs_two_arrays_fu_174_y_imag_address0;
wire    grp_fft_nrvs_two_arrays_fu_174_y_imag_ce0;
wire    grp_fft_nrvs_two_arrays_fu_174_y_imag_we0;
wire   [31:0] grp_fft_nrvs_two_arrays_fu_174_y_imag_d0;
wire   [31:0] grp_fft_nrvs_two_arrays_fu_174_y_imag_q0;
wire   [31:0] grp_fft_nrvs_two_arrays_fu_174_direction;
reg   [3:0] p_0_rec_i_reg_139;
wire   [0:0] tmp_6_fu_213_p1;
reg   [31:0] i_reg_150;
reg   [31:0] i_1_reg_162;
reg    grp_fft_nrvs_two_arrays_fu_174_ap_start_ap_start_reg = 1'b0;
wire   [63:0] p_0_rec_i_cast_fu_188_p1;
wire   [63:0] tmp_s_fu_233_p1;
wire   [63:0] tmp_7_fu_259_p1;
wire   [31:0] tmp_3_fu_265_p1;
wire   [31:0] tmp_4_fu_270_p1;
wire   [31:0] tmp_5_fu_239_p1;
wire   [31:0] tmp_8_fu_243_p1;
reg   [3:0] ap_NS_fsm;


xillybus_wrapper_p_str3 #(
    .DataWidth( 7 ),
    .AddressRange( 14 ),
    .AddressWidth( 4 ))
p_str3_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( p_str3_address0 ),
    .ce0( p_str3_ce0 ),
    .q0( p_str3_q0 )
);

xillybus_wrapper_a_real #(
    .DataWidth( 32 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
a_real_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( a_real_address0 ),
    .ce0( a_real_ce0 ),
    .we0( a_real_we0 ),
    .d0( a_real_d0 ),
    .q0( a_real_q0 )
);

xillybus_wrapper_a_real #(
    .DataWidth( 32 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
a_imag_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( a_imag_address0 ),
    .ce0( a_imag_ce0 ),
    .we0( a_imag_we0 ),
    .d0( a_imag_d0 ),
    .q0( a_imag_q0 )
);

xillybus_wrapper_a_real #(
    .DataWidth( 32 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
y_real_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( y_real_address0 ),
    .ce0( y_real_ce0 ),
    .we0( y_real_we0 ),
    .d0( y_real_d0 ),
    .q0( y_real_q0 )
);

xillybus_wrapper_a_real #(
    .DataWidth( 32 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
y_imag_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( y_imag_address0 ),
    .ce0( y_imag_ce0 ),
    .we0( y_imag_we0 ),
    .d0( y_imag_d0 ),
    .q0( y_imag_q0 )
);

fft_nrvs_two_arrays grp_fft_nrvs_two_arrays_fu_174(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst ),
    .ap_start( grp_fft_nrvs_two_arrays_fu_174_ap_start ),
    .ap_done( grp_fft_nrvs_two_arrays_fu_174_ap_done ),
    .ap_idle( grp_fft_nrvs_two_arrays_fu_174_ap_idle ),
    .ap_ready( grp_fft_nrvs_two_arrays_fu_174_ap_ready ),
    .n( grp_fft_nrvs_two_arrays_fu_174_n ),
    .a_real_address0( grp_fft_nrvs_two_arrays_fu_174_a_real_address0 ),
    .a_real_ce0( grp_fft_nrvs_two_arrays_fu_174_a_real_ce0 ),
    .a_real_we0( grp_fft_nrvs_two_arrays_fu_174_a_real_we0 ),
    .a_real_d0( grp_fft_nrvs_two_arrays_fu_174_a_real_d0 ),
    .a_real_q0( grp_fft_nrvs_two_arrays_fu_174_a_real_q0 ),
    .a_imag_address0( grp_fft_nrvs_two_arrays_fu_174_a_imag_address0 ),
    .a_imag_ce0( grp_fft_nrvs_two_arrays_fu_174_a_imag_ce0 ),
    .a_imag_we0( grp_fft_nrvs_two_arrays_fu_174_a_imag_we0 ),
    .a_imag_d0( grp_fft_nrvs_two_arrays_fu_174_a_imag_d0 ),
    .a_imag_q0( grp_fft_nrvs_two_arrays_fu_174_a_imag_q0 ),
    .y_real_address0( grp_fft_nrvs_two_arrays_fu_174_y_real_address0 ),
    .y_real_ce0( grp_fft_nrvs_two_arrays_fu_174_y_real_ce0 ),
    .y_real_we0( grp_fft_nrvs_two_arrays_fu_174_y_real_we0 ),
    .y_real_d0( grp_fft_nrvs_two_arrays_fu_174_y_real_d0 ),
    .y_real_q0( grp_fft_nrvs_two_arrays_fu_174_y_real_q0 ),
    .y_imag_address0( grp_fft_nrvs_two_arrays_fu_174_y_imag_address0 ),
    .y_imag_ce0( grp_fft_nrvs_two_arrays_fu_174_y_imag_ce0 ),
    .y_imag_we0( grp_fft_nrvs_two_arrays_fu_174_y_imag_we0 ),
    .y_imag_d0( grp_fft_nrvs_two_arrays_fu_174_y_imag_d0 ),
    .y_imag_q0( grp_fft_nrvs_two_arrays_fu_174_y_imag_q0 ),
    .direction( grp_fft_nrvs_two_arrays_fu_174_direction )
);



/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// grp_fft_nrvs_two_arrays_fu_174_ap_start_ap_start_reg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_grp_fft_nrvs_two_arrays_fu_174_ap_start_ap_start_reg
    if (ap_rst == 1'b1) begin
        grp_fft_nrvs_two_arrays_fu_174_ap_start_ap_start_reg <= ap_const_logic_0;
    end else begin
        if (((ap_ST_st6_fsm_5 == ap_CS_fsm) & (ap_const_lv1_0 == tmp_fu_222_p2) & ~ap_sig_bdd_69)) begin
            grp_fft_nrvs_two_arrays_fu_174_ap_start_ap_start_reg <= ap_const_logic_1;
        end else if ((ap_const_logic_1 == grp_fft_nrvs_two_arrays_fu_174_ap_ready)) begin
            grp_fft_nrvs_two_arrays_fu_174_ap_start_ap_start_reg <= ap_const_logic_0;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((~(out_r_full_n == ap_const_logic_0) & (ap_ST_st11_fsm_10 == ap_CS_fsm))) begin
        i_1_reg_162 <= i_3_reg_324;
    end else if (((ap_ST_st8_fsm_7 == ap_CS_fsm) & ~(ap_const_logic_0 == grp_fft_nrvs_two_arrays_fu_174_ap_done))) begin
        i_1_reg_162 <= ap_const_lv32_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (~(in_r_empty_n == ap_const_logic_0)) begin
        if ((ap_ST_st7_fsm_6 == ap_CS_fsm)) begin
            i_reg_150 <= i_2_reg_311;
        end else if ((ap_ST_st5_fsm_4 == ap_CS_fsm)) begin
            i_reg_150 <= ap_const_lv32_0;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st4_fsm_3 == ap_CS_fsm) & ~(ap_const_lv1_0 == tmp_6_fu_213_p1))) begin
        p_0_rec_i_reg_139 <= p_rec_i_reg_283;
    end else if ((ap_ST_st1_fsm_0 == ap_CS_fsm)) begin
        p_0_rec_i_reg_139 <= ap_const_lv4_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st5_fsm_4 == ap_CS_fsm) & ~(in_r_empty_n == ap_const_logic_0))) begin
        direction_reg_303 <= in_r_dout;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st6_fsm_5 == ap_CS_fsm) & ~ap_sig_bdd_69)) begin
        i_2_reg_311 <= i_2_fu_227_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st9_fsm_8 == ap_CS_fsm)) begin
        i_3_reg_324 <= i_3_fu_253_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st3_fsm_2 == ap_CS_fsm) & ~(tmp_i_reg_279 == ap_const_lv1_0) & ~ap_sig_bdd_52)) begin
        n_reg_293 <= in_r_dout;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st2_fsm_1 == ap_CS_fsm)) begin
        p_rec_i_reg_283 <= p_rec_i_fu_199_p2;
        tmp_i_reg_279 <= tmp_i_fu_193_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st3_fsm_2 == ap_CS_fsm) & ~ap_sig_bdd_52)) begin
        p_str3_load_cast_reg_288[0] <= p_str3_load_cast_fu_205_p1[0];
p_str3_load_cast_reg_288[1] <= p_str3_load_cast_fu_205_p1[1];
p_str3_load_cast_reg_288[2] <= p_str3_load_cast_fu_205_p1[2];
p_str3_load_cast_reg_288[3] <= p_str3_load_cast_fu_205_p1[3];
p_str3_load_cast_reg_288[4] <= p_str3_load_cast_fu_205_p1[4];
p_str3_load_cast_reg_288[5] <= p_str3_load_cast_fu_205_p1[5];
p_str3_load_cast_reg_288[6] <= p_str3_load_cast_fu_205_p1[6];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st6_fsm_5 == ap_CS_fsm) & ~(ap_const_lv1_0 == tmp_fu_222_p2) & ~ap_sig_bdd_69)) begin
        tmp_10_reg_316 <= in_r_dout;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st10_fsm_9 == ap_CS_fsm) & ~(out_r_full_n == ap_const_logic_0))) begin
        y_imag_load_reg_339 <= y_imag_q0;
    end
end

/// a_imag_address0 assign process. ///
always @ (ap_CS_fsm or grp_fft_nrvs_two_arrays_fu_174_a_imag_address0 or tmp_s_fu_233_p1)
begin
    if ((ap_ST_st7_fsm_6 == ap_CS_fsm)) begin
        a_imag_address0 = tmp_s_fu_233_p1;
    end else if ((ap_ST_st8_fsm_7 == ap_CS_fsm)) begin
        a_imag_address0 = grp_fft_nrvs_two_arrays_fu_174_a_imag_address0;
    end else begin
        a_imag_address0 = 'bx;
    end
end

/// a_imag_ce0 assign process. ///
always @ (in_r_empty_n or ap_CS_fsm or grp_fft_nrvs_two_arrays_fu_174_a_imag_ce0)
begin
    if ((~(in_r_empty_n == ap_const_logic_0) & (ap_ST_st7_fsm_6 == ap_CS_fsm))) begin
        a_imag_ce0 = ap_const_logic_1;
    end else if ((ap_ST_st8_fsm_7 == ap_CS_fsm)) begin
        a_imag_ce0 = grp_fft_nrvs_two_arrays_fu_174_a_imag_ce0;
    end else begin
        a_imag_ce0 = ap_const_logic_0;
    end
end

/// a_imag_d0 assign process. ///
always @ (ap_CS_fsm or grp_fft_nrvs_two_arrays_fu_174_a_imag_d0 or tmp_8_fu_243_p1)
begin
    if ((ap_ST_st7_fsm_6 == ap_CS_fsm)) begin
        a_imag_d0 = tmp_8_fu_243_p1;
    end else if ((ap_ST_st8_fsm_7 == ap_CS_fsm)) begin
        a_imag_d0 = grp_fft_nrvs_two_arrays_fu_174_a_imag_d0;
    end else begin
        a_imag_d0 = 'bx;
    end
end

/// a_imag_we0 assign process. ///
always @ (in_r_empty_n or ap_CS_fsm or grp_fft_nrvs_two_arrays_fu_174_a_imag_we0)
begin
    if ((~(in_r_empty_n == ap_const_logic_0) & (ap_ST_st7_fsm_6 == ap_CS_fsm))) begin
        a_imag_we0 = ap_const_logic_1;
    end else if ((ap_ST_st8_fsm_7 == ap_CS_fsm)) begin
        a_imag_we0 = grp_fft_nrvs_two_arrays_fu_174_a_imag_we0;
    end else begin
        a_imag_we0 = ap_const_logic_0;
    end
end

/// a_real_address0 assign process. ///
always @ (ap_CS_fsm or grp_fft_nrvs_two_arrays_fu_174_a_real_address0 or tmp_s_fu_233_p1)
begin
    if ((ap_ST_st7_fsm_6 == ap_CS_fsm)) begin
        a_real_address0 = tmp_s_fu_233_p1;
    end else if ((ap_ST_st8_fsm_7 == ap_CS_fsm)) begin
        a_real_address0 = grp_fft_nrvs_two_arrays_fu_174_a_real_address0;
    end else begin
        a_real_address0 = 'bx;
    end
end

/// a_real_ce0 assign process. ///
always @ (in_r_empty_n or ap_CS_fsm or grp_fft_nrvs_two_arrays_fu_174_a_real_ce0)
begin
    if ((~(in_r_empty_n == ap_const_logic_0) & (ap_ST_st7_fsm_6 == ap_CS_fsm))) begin
        a_real_ce0 = ap_const_logic_1;
    end else if ((ap_ST_st8_fsm_7 == ap_CS_fsm)) begin
        a_real_ce0 = grp_fft_nrvs_two_arrays_fu_174_a_real_ce0;
    end else begin
        a_real_ce0 = ap_const_logic_0;
    end
end

/// a_real_d0 assign process. ///
always @ (ap_CS_fsm or grp_fft_nrvs_two_arrays_fu_174_a_real_d0 or tmp_5_fu_239_p1)
begin
    if ((ap_ST_st7_fsm_6 == ap_CS_fsm)) begin
        a_real_d0 = tmp_5_fu_239_p1;
    end else if ((ap_ST_st8_fsm_7 == ap_CS_fsm)) begin
        a_real_d0 = grp_fft_nrvs_two_arrays_fu_174_a_real_d0;
    end else begin
        a_real_d0 = 'bx;
    end
end

/// a_real_we0 assign process. ///
always @ (in_r_empty_n or ap_CS_fsm or grp_fft_nrvs_two_arrays_fu_174_a_real_we0)
begin
    if ((~(in_r_empty_n == ap_const_logic_0) & (ap_ST_st7_fsm_6 == ap_CS_fsm))) begin
        a_real_we0 = ap_const_logic_1;
    end else if ((ap_ST_st8_fsm_7 == ap_CS_fsm)) begin
        a_real_we0 = grp_fft_nrvs_two_arrays_fu_174_a_real_we0;
    end else begin
        a_real_we0 = ap_const_logic_0;
    end
end

/// debug_out_ap_vld assign process. ///
always @ (ap_CS_fsm or tmp_6_fu_213_p1)
begin
    if (((ap_ST_st4_fsm_3 == ap_CS_fsm) & ~(ap_const_lv1_0 == tmp_6_fu_213_p1))) begin
        debug_out_ap_vld = ap_const_logic_1;
    end else begin
        debug_out_ap_vld = ap_const_logic_0;
    end
end

/// in_r_read assign process. ///
always @ (in_r_empty_n or ap_CS_fsm or tmp_i_reg_279 or ap_sig_bdd_52 or tmp_fu_222_p2 or ap_sig_bdd_69)
begin
    if ((((ap_ST_st3_fsm_2 == ap_CS_fsm) & ~(tmp_i_reg_279 == ap_const_lv1_0) & ~ap_sig_bdd_52) | ((ap_ST_st5_fsm_4 == ap_CS_fsm) & ~(in_r_empty_n == ap_const_logic_0)) | ((ap_ST_st6_fsm_5 == ap_CS_fsm) & ~(ap_const_lv1_0 == tmp_fu_222_p2) & ~ap_sig_bdd_69) | (~(in_r_empty_n == ap_const_logic_0) & (ap_ST_st7_fsm_6 == ap_CS_fsm)))) begin
        in_r_read = ap_const_logic_1;
    end else begin
        in_r_read = ap_const_logic_0;
    end
end

/// out_r_din assign process. ///
always @ (out_r_full_n or ap_CS_fsm or tmp_3_fu_265_p1 or tmp_4_fu_270_p1)
begin
    if (~(out_r_full_n == ap_const_logic_0)) begin
        if ((ap_ST_st11_fsm_10 == ap_CS_fsm)) begin
            out_r_din = tmp_4_fu_270_p1;
        end else if ((ap_ST_st10_fsm_9 == ap_CS_fsm)) begin
            out_r_din = tmp_3_fu_265_p1;
        end else begin
            out_r_din = 'bx;
        end
    end else begin
        out_r_din = 'bx;
    end
end

/// out_r_write assign process. ///
always @ (out_r_full_n or ap_CS_fsm)
begin
    if ((((ap_ST_st10_fsm_9 == ap_CS_fsm) & ~(out_r_full_n == ap_const_logic_0)) | (~(out_r_full_n == ap_const_logic_0) & (ap_ST_st11_fsm_10 == ap_CS_fsm)))) begin
        out_r_write = ap_const_logic_1;
    end else begin
        out_r_write = ap_const_logic_0;
    end
end

/// p_str3_ce0 assign process. ///
always @ (ap_CS_fsm)
begin
    if ((ap_ST_st2_fsm_1 == ap_CS_fsm)) begin
        p_str3_ce0 = ap_const_logic_1;
    end else begin
        p_str3_ce0 = ap_const_logic_0;
    end
end

/// y_imag_address0 assign process. ///
always @ (ap_CS_fsm or grp_fft_nrvs_two_arrays_fu_174_y_imag_address0 or tmp_7_fu_259_p1)
begin
    if ((ap_ST_st9_fsm_8 == ap_CS_fsm)) begin
        y_imag_address0 = tmp_7_fu_259_p1;
    end else if ((ap_ST_st8_fsm_7 == ap_CS_fsm)) begin
        y_imag_address0 = grp_fft_nrvs_two_arrays_fu_174_y_imag_address0;
    end else begin
        y_imag_address0 = 'bx;
    end
end

/// y_imag_ce0 assign process. ///
always @ (ap_CS_fsm or grp_fft_nrvs_two_arrays_fu_174_y_imag_ce0)
begin
    if ((ap_ST_st9_fsm_8 == ap_CS_fsm)) begin
        y_imag_ce0 = ap_const_logic_1;
    end else if ((ap_ST_st8_fsm_7 == ap_CS_fsm)) begin
        y_imag_ce0 = grp_fft_nrvs_two_arrays_fu_174_y_imag_ce0;
    end else begin
        y_imag_ce0 = ap_const_logic_0;
    end
end

/// y_imag_we0 assign process. ///
always @ (ap_CS_fsm or grp_fft_nrvs_two_arrays_fu_174_y_imag_we0)
begin
    if ((ap_ST_st8_fsm_7 == ap_CS_fsm)) begin
        y_imag_we0 = grp_fft_nrvs_two_arrays_fu_174_y_imag_we0;
    end else begin
        y_imag_we0 = ap_const_logic_0;
    end
end

/// y_real_address0 assign process. ///
always @ (ap_CS_fsm or grp_fft_nrvs_two_arrays_fu_174_y_real_address0 or tmp_7_fu_259_p1)
begin
    if ((ap_ST_st9_fsm_8 == ap_CS_fsm)) begin
        y_real_address0 = tmp_7_fu_259_p1;
    end else if ((ap_ST_st8_fsm_7 == ap_CS_fsm)) begin
        y_real_address0 = grp_fft_nrvs_two_arrays_fu_174_y_real_address0;
    end else begin
        y_real_address0 = 'bx;
    end
end

/// y_real_ce0 assign process. ///
always @ (ap_CS_fsm or grp_fft_nrvs_two_arrays_fu_174_y_real_ce0)
begin
    if ((ap_ST_st9_fsm_8 == ap_CS_fsm)) begin
        y_real_ce0 = ap_const_logic_1;
    end else if ((ap_ST_st8_fsm_7 == ap_CS_fsm)) begin
        y_real_ce0 = grp_fft_nrvs_two_arrays_fu_174_y_real_ce0;
    end else begin
        y_real_ce0 = ap_const_logic_0;
    end
end

/// y_real_we0 assign process. ///
always @ (ap_CS_fsm or grp_fft_nrvs_two_arrays_fu_174_y_real_we0)
begin
    if ((ap_ST_st8_fsm_7 == ap_CS_fsm)) begin
        y_real_we0 = grp_fft_nrvs_two_arrays_fu_174_y_real_we0;
    end else begin
        y_real_we0 = ap_const_logic_0;
    end
end
always @ (in_r_empty_n or out_r_full_n or ap_CS_fsm or tmp_i_reg_279 or ap_sig_bdd_52 or tmp_fu_222_p2 or ap_sig_bdd_69 or tmp_9_fu_248_p2 or grp_fft_nrvs_two_arrays_fu_174_ap_done or tmp_6_fu_213_p1)
begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
            ap_NS_fsm = ap_ST_st2_fsm_1;
        ap_ST_st2_fsm_1 : 
            ap_NS_fsm = ap_ST_st3_fsm_2;
        ap_ST_st3_fsm_2 : 
            if ((~(tmp_i_reg_279 == ap_const_lv1_0) & ~ap_sig_bdd_52)) begin
                ap_NS_fsm = ap_ST_st5_fsm_4;
            end else if (((tmp_i_reg_279 == ap_const_lv1_0) & ~ap_sig_bdd_52)) begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end else begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end
        ap_ST_st4_fsm_3 : 
            if (~(ap_const_lv1_0 == tmp_6_fu_213_p1)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end
        ap_ST_st5_fsm_4 : 
            if (~(in_r_empty_n == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st6_fsm_5;
            end else begin
                ap_NS_fsm = ap_ST_st5_fsm_4;
            end
        ap_ST_st6_fsm_5 : 
            if (((ap_const_lv1_0 == tmp_fu_222_p2) & ~ap_sig_bdd_69)) begin
                ap_NS_fsm = ap_ST_st8_fsm_7;
            end else if ((~(ap_const_lv1_0 == tmp_fu_222_p2) & ~ap_sig_bdd_69)) begin
                ap_NS_fsm = ap_ST_st7_fsm_6;
            end else begin
                ap_NS_fsm = ap_ST_st6_fsm_5;
            end
        ap_ST_st7_fsm_6 : 
            if (~(in_r_empty_n == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st6_fsm_5;
            end else begin
                ap_NS_fsm = ap_ST_st7_fsm_6;
            end
        ap_ST_st8_fsm_7 : 
            if (~(ap_const_logic_0 == grp_fft_nrvs_two_arrays_fu_174_ap_done)) begin
                ap_NS_fsm = ap_ST_st9_fsm_8;
            end else begin
                ap_NS_fsm = ap_ST_st8_fsm_7;
            end
        ap_ST_st9_fsm_8 : 
            if ((ap_const_lv1_0 == tmp_9_fu_248_p2)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_st10_fsm_9;
            end
        ap_ST_st10_fsm_9 : 
            if (~(out_r_full_n == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st11_fsm_10;
            end else begin
                ap_NS_fsm = ap_ST_st10_fsm_9;
            end
        ap_ST_st11_fsm_10 : 
            if (~(out_r_full_n == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st9_fsm_8;
            end else begin
                ap_NS_fsm = ap_ST_st11_fsm_10;
            end
        default : 
            ap_NS_fsm = 'bx;
    endcase
end

/// ap_sig_bdd_52 assign process. ///
always @ (in_r_empty_n or tmp_i_reg_279)
begin
    ap_sig_bdd_52 = ((in_r_empty_n == ap_const_logic_0) & ~(tmp_i_reg_279 == ap_const_lv1_0));
end

/// ap_sig_bdd_69 assign process. ///
always @ (in_r_empty_n or tmp_fu_222_p2)
begin
    ap_sig_bdd_69 = ((in_r_empty_n == ap_const_logic_0) & ~(ap_const_lv1_0 == tmp_fu_222_p2));
end
assign debug_out = p_str3_load_cast_reg_288;
assign grp_fft_nrvs_two_arrays_fu_174_a_imag_q0 = a_imag_q0;
assign grp_fft_nrvs_two_arrays_fu_174_a_real_q0 = a_real_q0;
assign grp_fft_nrvs_two_arrays_fu_174_ap_start = grp_fft_nrvs_two_arrays_fu_174_ap_start_ap_start_reg;
assign grp_fft_nrvs_two_arrays_fu_174_direction = direction_reg_303;
assign grp_fft_nrvs_two_arrays_fu_174_n = n_reg_293;
assign grp_fft_nrvs_two_arrays_fu_174_y_imag_q0 = y_imag_q0;
assign grp_fft_nrvs_two_arrays_fu_174_y_real_q0 = y_real_q0;
assign i_2_fu_227_p2 = (i_reg_150 + ap_const_lv32_1);
assign i_3_fu_253_p2 = (i_1_reg_162 + ap_const_lv32_1);
assign p_0_rec_i_cast_fu_188_p1 = $unsigned(p_0_rec_i_reg_139);
assign p_rec_i_fu_199_p2 = (p_0_rec_i_reg_139 + ap_const_lv4_1);
assign p_str3_address0 = p_0_rec_i_cast_fu_188_p1;
assign p_str3_load_cast_fu_205_p1 = $unsigned(p_str3_q0);
assign tmp_3_fu_265_p1 = y_real_q0;
assign tmp_4_fu_270_p1 = y_imag_load_reg_339;
assign tmp_5_fu_239_p1 = tmp_10_reg_316;
assign tmp_6_fu_213_p1 = debug_ready[0:0];
assign tmp_7_fu_259_p1 = $signed(i_1_reg_162);
assign tmp_8_fu_243_p1 = in_r_dout;
assign tmp_9_fu_248_p2 = ($signed(i_1_reg_162) < $signed(n_reg_293)? 1'b1: 1'b0);
assign tmp_fu_222_p2 = ($signed(i_reg_150) < $signed(n_reg_293)? 1'b1: 1'b0);
assign tmp_i_fu_193_p2 = (p_0_rec_i_reg_139 == ap_const_lv4_D? 1'b1: 1'b0);
assign tmp_s_fu_233_p1 = $signed(i_reg_150);
assign y_imag_d0 = grp_fft_nrvs_two_arrays_fu_174_y_imag_d0;
assign y_real_d0 = grp_fft_nrvs_two_arrays_fu_174_y_real_d0;
always @ (posedge ap_clk)
begin
    p_str3_load_cast_reg_288[7] <= 1'b0;
end



endmodule //xillybus_wrapper

